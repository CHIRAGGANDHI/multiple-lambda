service: lambda-cron-sample-test-1
frameworkVersion: "3"
provider:
  name: aws
  runtime: python3.9
  region: ap-south-1
  timeout: 6
  memorySize: 128
  stage: <+pipeline.stages.Infrastrucutre.variables.environment>
  environment:
    AWS_PARAMETER_SPACE: <+pipeline.stages.Infrastrucutre.variables.space>
    AWS_LAMBDA_REGION: <+pipeline.stages.Infrastrucutre.variables.aws_region>
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:Describe*
            - ssm:Get*
            - ssm:List*
          Resource:
            - "*"   
  layers:
   - arn:aws:lambda:ap-south-1:176022468876:layer:AWS-Parameters-and-Secrets-Lambda-Extension:10 
   - arn:aws:lambda:ap-south-1:898466741470:layer:psycopg2-py37:1          
            
functions:
  rateHandler:
    name: ${self:custom.functionName}
    handler: handler.run
    description: A Sample Cron Job Function
resources:
  Resources:
    CronJobTrigger:
      Type: AWS::Events::Rule
      Properties:
        Name: <+pipeline.stages.Infrastrucutre.variables.business_divsion>-<+pipeline.stages.Infrastrucutre.variables.space>-<+pipeline.stages.Infrastrucutre.variables.environment>-rateLimit-scheduler
        Description: Invoke Lambda Function Every 1 Minute
        ScheduleExpression: cron(*/1 * * * ? *)
        State: ENABLED
        Targets:
          - Id: ${self:custom.functionName}
            Arn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:custom.functionName}
    LambdaInvokePermission:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: ${self:custom.functionName}
        Action: lambda:InvokeFunction
        Principal: events.amazonaws.com
        SourceArn:
          Fn::GetAtt:
            - CronJobTrigger
            - Arn
      DependsOn:
        - RateHandlerLambdaFunction
        
custom:
  functionName: <+pipeline.stages.Infrastrucutre.variables.business_divsion>-<+pipeline.stages.Infrastrucutre.variables.space>-<+pipeline.stages.Infrastrucutre.variables.environment>-rateLimit

package:
  artifact: <+artifact.path>          
plugins:
  - serverless-deployment-bucket@latest  
